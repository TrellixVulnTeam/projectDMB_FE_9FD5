{"version":3,"file":"range.component.d.ts","sources":["range.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const RANGE_VALUE_ACCESOR: any;\nexport declare class MdbRangeComponent implements ControlValueAccessor, AfterViewInit {\n    private _cdRef;\n    input: ElementRef;\n    thumb: ElementRef;\n    thumbValue: ElementRef;\n    id: string;\n    required: boolean;\n    name: string;\n    value: string;\n    disabled: boolean;\n    min: number;\n    max: number;\n    step: number;\n    default: boolean;\n    defaultRangeCounterClass: string;\n    rangeValueChange: EventEmitter<any>;\n    visibility: boolean;\n    thumbStyle: any;\n    onchange(event: any): void;\n    onInput(): void;\n    constructor(_cdRef: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    focusRangeInput(): void;\n    blurRangeInput(): void;\n    thumbPositionUpdate(): void;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n}\n"]}