{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, ContentChild, Input, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport Quill from 'quill';\n\nfunction Editor_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Editor_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, Editor_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n  }\n}\n\nfunction Editor_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"span\", 5);\n    i0.ɵɵelementStart(2, \"select\", 6);\n    i0.ɵɵelementStart(3, \"option\", 7);\n    i0.ɵɵtext(4, \"Heading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 8);\n    i0.ɵɵtext(6, \"Subheading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 9);\n    i0.ɵɵtext(8, \"Normal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 10);\n    i0.ɵɵelementStart(10, \"option\", 9);\n    i0.ɵɵtext(11, \"Sans Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"option\", 11);\n    i0.ɵɵtext(13, \"Serif\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"option\", 12);\n    i0.ɵɵtext(15, \"Monospace\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\", 5);\n    i0.ɵɵelement(17, \"button\", 13);\n    i0.ɵɵelement(18, \"button\", 14);\n    i0.ɵɵelement(19, \"button\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"span\", 5);\n    i0.ɵɵelement(21, \"select\", 16);\n    i0.ɵɵelement(22, \"select\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"span\", 5);\n    i0.ɵɵelement(24, \"button\", 18);\n    i0.ɵɵelement(25, \"button\", 19);\n    i0.ɵɵelementStart(26, \"select\", 20);\n    i0.ɵɵelement(27, \"option\", 9);\n    i0.ɵɵelementStart(28, \"option\", 21);\n    i0.ɵɵtext(29, \"center\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"option\", 22);\n    i0.ɵɵtext(31, \"right\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"option\", 23);\n    i0.ɵɵtext(33, \"justify\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"span\", 5);\n    i0.ɵɵelement(35, \"button\", 24);\n    i0.ɵɵelement(36, \"button\", 25);\n    i0.ɵɵelement(37, \"button\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"span\", 5);\n    i0.ɵɵelement(39, \"button\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = [[[\"p-header\"]]];\nconst _c1 = [\"p-header\"];\nconst EDITOR_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n\nclass Editor {\n  constructor(el) {\n    this.el = el;\n    this.onTextChange = new EventEmitter();\n    this.onSelectionChange = new EventEmitter();\n    this.onInit = new EventEmitter();\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n  }\n\n  ngAfterViewInit() {\n    let editorElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content');\n    let toolbarElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar');\n    let defaultModule = {\n      toolbar: toolbarElement\n    };\n    let modules = this.modules ? Object.assign(Object.assign({}, defaultModule), this.modules) : defaultModule;\n    this.quill = new Quill(editorElement, {\n      modules: modules,\n      placeholder: this.placeholder,\n      readOnly: this.readonly,\n      theme: 'snow',\n      formats: this.formats,\n      bounds: this.bounds,\n      debug: this.debug,\n      scrollingContainer: this.scrollingContainer\n    });\n\n    if (this.value) {\n      this.quill.setContents(this.quill.clipboard.convert(this.value));\n    }\n\n    this.quill.on('text-change', (delta, oldContents, source) => {\n      if (source === 'user') {\n        let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n        let text = this.quill.getText().trim();\n\n        if (html === '<p><br></p>') {\n          html = null;\n        }\n\n        this.onTextChange.emit({\n          htmlValue: html,\n          textValue: text,\n          delta: delta,\n          source: source\n        });\n        this.onModelChange(html);\n        this.onModelTouched();\n      }\n    });\n    this.quill.on('selection-change', (range, oldRange, source) => {\n      this.onSelectionChange.emit({\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n    });\n    this.onInit.emit({\n      editor: this.quill\n    });\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  writeValue(value) {\n    this.value = value;\n\n    if (this.quill) {\n      if (value) this.quill.setContents(this.quill.clipboard.convert(value));else this.quill.setText('');\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  getQuill() {\n    return this.quill;\n  }\n\n  get readonly() {\n    return this._readonly;\n  }\n\n  set readonly(val) {\n    this._readonly = val;\n\n    if (this.quill) {\n      if (this._readonly) this.quill.disable();else this.quill.enable();\n    }\n  }\n\n}\n\nEditor.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: Editor,\n  deps: [{\n    token: i0.ElementRef\n  }],\n  target: i0.ɵɵFactoryTarget.Component\n});\nEditor.ɵcmp = i0.ɵɵdefineComponent({\n  type: Editor,\n  selectors: [[\"p-editor\"]],\n  contentQueries: function Editor_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, Header, 5);\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toolbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    style: \"style\",\n    styleClass: \"styleClass\",\n    placeholder: \"placeholder\",\n    formats: \"formats\",\n    modules: \"modules\",\n    bounds: \"bounds\",\n    scrollingContainer: \"scrollingContainer\",\n    debug: \"debug\",\n    readonly: \"readonly\"\n  },\n  outputs: {\n    onTextChange: \"onTextChange\",\n    onSelectionChange: \"onSelectionChange\",\n    onInit: \"onInit\"\n  },\n  features: [i0.ɵɵProvidersFeature([EDITOR_VALUE_ACCESSOR])],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 6,\n  consts: [[3, \"ngClass\"], [\"class\", \"p-editor-toolbar\", 4, \"ngIf\"], [1, \"p-editor-content\", 3, \"ngStyle\"], [1, \"p-editor-toolbar\"], [4, \"ngTemplateOutlet\"], [1, \"ql-formats\"], [1, \"ql-header\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"selected\", \"\"], [1, \"ql-font\"], [\"value\", \"serif\"], [\"value\", \"monospace\"], [\"aria-label\", \"Bold\", \"type\", \"button\", 1, \"ql-bold\"], [\"aria-label\", \"Italic\", \"type\", \"button\", 1, \"ql-italic\"], [\"aria-label\", \"Underline\", \"type\", \"button\", 1, \"ql-underline\"], [1, \"ql-color\"], [1, \"ql-background\"], [\"value\", \"ordered\", \"aria-label\", \"Ordered List\", \"type\", \"button\", 1, \"ql-list\"], [\"value\", \"bullet\", \"aria-label\", \"Unordered List\", \"type\", \"button\", 1, \"ql-list\"], [1, \"ql-align\"], [\"value\", \"center\"], [\"value\", \"right\"], [\"value\", \"justify\"], [\"aria-label\", \"Insert Link\", \"type\", \"button\", 1, \"ql-link\"], [\"aria-label\", \"Insert Image\", \"type\", \"button\", 1, \"ql-image\"], [\"aria-label\", \"Insert Code Block\", \"type\", \"button\", 1, \"ql-code-block\"], [\"aria-label\", \"Remove Styles\", \"type\", \"button\", 1, \"ql-clean\"]],\n  template: function Editor_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, Editor_div_1_Template, 3, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, Editor_div_2_Template, 40, 0, \"div\", 1);\n      i0.ɵɵelement(3, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-editor-container\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbar || ctx.headerTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.toolbar && !ctx.headerTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style);\n    }\n  },\n  directives: [i1.NgClass, i1.NgIf, i1.NgStyle, i1.NgTemplateOutlet],\n  styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: Editor,\n  decorators: [{\n    type: Component,\n    args: [{\n      selector: 'p-editor',\n      template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n      providers: [EDITOR_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"]\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  },\n  propDecorators: {\n    onTextChange: [{\n      type: Output\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    toolbar: [{\n      type: ContentChild,\n      args: [Header]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    onInit: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    readonly: [{\n      type: Input\n    }]\n  }\n});\n\nclass EditorModule {}\n\nEditorModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: EditorModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: EditorModule,\n  declarations: [Editor],\n  imports: [CommonModule],\n  exports: [Editor, SharedModule]\n});\nEditorModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: EditorModule,\n  imports: [[CommonModule], SharedModule]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.0.3\",\n  ngImport: i0,\n  type: EditorModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Editor, SharedModule],\n      declarations: [Editor]\n    }]\n  }]\n});\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule }; //# sourceMappingURL=primeng-editor.mjs.map","map":{"version":3,"sources":["C:/Users/Thanyarat/Desktop/projectDMB/webasset-fe/node_modules/primeng/fesm2015/primeng-editor.mjs"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Output","ContentChild","Input","ContentChildren","NgModule","i1","CommonModule","Header","PrimeTemplate","SharedModule","DomHandler","NG_VALUE_ACCESSOR","Quill","EDITOR_VALUE_ACCESSOR","provide","useExisting","Editor","multi","constructor","el","onTextChange","onSelectionChange","onInit","onModelChange","onModelTouched","ngAfterViewInit","editorElement","findSingle","nativeElement","toolbarElement","defaultModule","toolbar","modules","Object","assign","quill","placeholder","readOnly","readonly","theme","formats","bounds","debug","scrollingContainer","value","setContents","clipboard","convert","on","delta","oldContents","source","html","innerHTML","text","getText","trim","emit","htmlValue","textValue","range","oldRange","editor","ngAfterContentInit","templates","forEach","item","getType","headerTemplate","template","writeValue","setText","registerOnChange","fn","registerOnTouched","getQuill","_readonly","val","disable","enable","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","ElementRef","target","ɵɵFactoryTarget","ɵcmp","NgClass","NgIf","NgStyle","NgTemplateOutlet","ɵɵngDeclareClassMetadata","decorators","args","selector","providers","changeDetection","OnPush","encapsulation","None","host","styles","ctorParameters","propDecorators","style","styleClass","EditorModule","ɵmod","ɵɵngDeclareNgModule","declarations","imports","exports","ɵinj","ɵɵngDeclareInjector"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, ContentChild, Input, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport Quill from 'quill';\n\nconst EDITOR_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Editor),\n    multi: true\n};\nclass Editor {\n    constructor(el) {\n        this.el = el;\n        this.onTextChange = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onInit = new EventEmitter();\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    ngAfterViewInit() {\n        let editorElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-content');\n        let toolbarElement = DomHandler.findSingle(this.el.nativeElement, 'div.p-editor-toolbar');\n        let defaultModule = { toolbar: toolbarElement };\n        let modules = this.modules ? Object.assign(Object.assign({}, defaultModule), this.modules) : defaultModule;\n        this.quill = new Quill(editorElement, {\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            bounds: this.bounds,\n            debug: this.debug,\n            scrollingContainer: this.scrollingContainer\n        });\n        if (this.value) {\n            this.quill.setContents(this.quill.clipboard.convert(this.value));\n        }\n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = DomHandler.findSingle(editorElement, '.ql-editor').innerHTML;\n                let text = this.quill.getText().trim();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        if (this.quill) {\n            if (value)\n                this.quill.setContents(this.quill.clipboard.convert(value));\n            else\n                this.quill.setText('');\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    getQuill() {\n        return this.quill;\n    }\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(val) {\n        this._readonly = val;\n        if (this.quill) {\n            if (this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n}\nEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Editor, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: Editor, selector: \"p-editor\", inputs: { style: \"style\", styleClass: \"styleClass\", placeholder: \"placeholder\", formats: \"formats\", modules: \"modules\", bounds: \"bounds\", scrollingContainer: \"scrollingContainer\", debug: \"debug\", readonly: \"readonly\" }, outputs: { onTextChange: \"onTextChange\", onSelectionChange: \"onSelectionChange\", onInit: \"onInit\" }, host: { classAttribute: \"p-element\" }, providers: [EDITOR_VALUE_ACCESSOR], queries: [{ propertyName: \"toolbar\", first: true, predicate: Header, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, isInline: true, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: Editor, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-editor', template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\">center</option>\n                        <option value=\"right\">right</option>\n                        <option value=\"justify\">justify</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `, providers: [EDITOR_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-editor-container .p-editor-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options .ql-picker-item{width:auto;height:auto}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onTextChange: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], toolbar: [{\n                type: ContentChild,\n                args: [Header]\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], onInit: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], readonly: [{\n                type: Input\n            }] } });\nclass EditorModule {\n}\nEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EditorModule, declarations: [Editor], imports: [CommonModule], exports: [Editor, SharedModule] });\nEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EditorModule, imports: [[CommonModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: EditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Editor, SharedModule],\n                    declarations: [Editor]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EDITOR_VALUE_ACCESSOR, Editor, EditorModule };\n//# sourceMappingURL=primeng-editor.mjs.map\n"]},"metadata":{},"sourceType":"module"}