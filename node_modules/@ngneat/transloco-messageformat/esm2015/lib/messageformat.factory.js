import MessageFormat from '@messageformat/core';
export function defaultFactory(locales, messageConfig) {
    return new MessageFormat(locales, messageConfig);
}
export function cachedFactory(locales, messageConfig) {
    const mf = defaultFactory(locales, messageConfig);
    const original = mf.compile;
    const cache = new Map();
    const localeKey = `__${(locales === null || locales === void 0 ? void 0 : locales.toString()) || MessageFormat.defaultLocale}__`;
    mf.compile = function (messages) {
        const cacheKey = `${localeKey}${messages}`;
        const cachedMsg = cache.get(cacheKey);
        if (cachedMsg) {
            return cachedMsg;
        }
        const msg = original.call(this, messages);
        cache.set(cacheKey, msg);
        return msg;
    };
    return mf;
}
//# sourceMappingURL=messageformat.factory.js.map