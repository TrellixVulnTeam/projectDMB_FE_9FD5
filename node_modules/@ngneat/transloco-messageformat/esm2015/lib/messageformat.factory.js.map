{"version":3,"file":"messageformat.factory.js","sourceRoot":"","sources":["../../../../../libs/transloco-messageformat/src/lib/messageformat.factory.ts"],"names":[],"mappings":"AACA,OAAO,aAGN,MAAM,qBAAqB,CAAC;AAO7B,MAAM,UAAU,cAAc,CAC5B,OAAiB,EACjB,aAA6C;IAE7C,OAAO,IAAI,aAAa,CAAW,OAAO,EAAE,aAAa,CAAC,CAAC;AAC7D,CAAC;AAED,MAAM,UAAU,aAAa,CAC3B,OAAiB,EACjB,aAA6C;IAE7C,MAAM,EAAE,GAAG,cAAc,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC;IAC5B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAqC,CAAC;IAC3D,MAAM,SAAS,GAAG,KAAK,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE,KAAI,aAAa,CAAC,aAAa,IAAI,CAAC;IAE9E,EAAE,CAAC,OAAO,GAAG,UAAU,QAAgB;QACrC,MAAM,QAAQ,GAAG,GAAG,SAAS,GAAG,QAAQ,EAAE,CAAC;QAC3C,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,SAAS,EAAE;YACb,OAAO,SAAS,CAAC;SAClB;QAED,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC1C,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAEzB,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;IAEF,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["import { MFLocale } from './messageformat.config';\nimport MessageFormat, {\n  MessageFormatOptions,\n  MessageFunction,\n} from '@messageformat/core';\n\nexport type MFFactory = (\n  locales: MFLocale,\n  messageConfig: MessageFormatOptions<'string'>\n) => MessageFormat;\n\nexport function defaultFactory(\n  locales: MFLocale,\n  messageConfig: MessageFormatOptions<'string'>\n): MessageFormat {\n  return new MessageFormat<'string'>(locales, messageConfig);\n}\n\nexport function cachedFactory(\n  locales: MFLocale,\n  messageConfig: MessageFormatOptions<'string'>\n): MessageFormat {\n  const mf = defaultFactory(locales, messageConfig);\n  const original = mf.compile;\n  const cache = new Map<string, MessageFunction<'string'>>();\n  const localeKey = `__${locales?.toString() || MessageFormat.defaultLocale}__`;\n\n  mf.compile = function (messages: string): MessageFunction<'string'> {\n    const cacheKey = `${localeKey}${messages}`;\n    const cachedMsg = cache.get(cacheKey);\n\n    if (cachedMsg) {\n      return cachedMsg;\n    }\n\n    const msg = original.call(this, messages);\n    cache.set(cacheKey, msg);\n\n    return msg;\n  };\n\n  return mf;\n}\n"]}